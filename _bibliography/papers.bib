---
---

@inproceedings{nadeem2021intelligent,
  title={Intelligent Malware Defenses},
  author={Nadeem, Azqa and Rimmer, Vera and Joosen, Wouter and Verwer, Sicco},
  booktitle={AI+Sec: Artificial Intelligence and Security},
  editor="Picek, Stjepan and Batina, Lejla and Baeck, Thomas and Buhan, Ileana and Guilley, Sylvain", 
	year={2021},
	publisher="Springer International Publishing",
	abstract="With rapidly evolving threat landscape surrounding malware, intelligent defenses based on machine learning are paramount. In this chapter, we review the literature proposed in the past decade and identify the state-of-the-art in various related research directions — malware detection, malware analysis, adversarial malware, and malware author attribution. We discuss challenges that emerge when machine learning is applied to malware. We also identify the key issues that need to be addressed by the research community in order to further deepen and systematize research in the malware domain.",
  pdf={AISec3-Intelligent-malware-defenses.pdf},
  selected={true},
  abbr={AI+Sec},
  kind={Chapters},
  forthcoming={true}
}


@article{nadeem2021sage2,
  title={SAGE: Intrusion Alert-driven Attack Graph Extractor},
  author={Nadeem, Azqa and Verwer, Sicco and Yang, Shanchieh J},
  journal={Proceedings of the 18th IEEE Symposium on Visualization for Cyber Security (VizSec)},
  year={2021},
  abstract={Attack graphs (AG) are used to assess pathways availed by cyber adversaries to penetrate a network. State-of-the-art approaches for AG generation focus mostly on deriving dependencies between system vulnerabilities based on network scans and expert knowledge. In real-world operations however, it is costly and ineffective to rely on constant vulnerability scanning and expert-crafted AGs. We propose to automatically learn AGs based on actions observed through intrusion alerts, without prior expert knowledge. Specifically, we develop an unsupervised sequence learning system, SAGE, that leverages the temporal and probabilistic dependence between alerts in a suffix-based probabilistic deterministic finite automaton (S-PDFA) – a model that accentuates infrequent severe alerts and summarizes paths leading to them. AGs are then derived from the
S-PDFA on a per-objective, per-victim basis. Tested with intrusion alerts collected through Collegiate Penetration Testing Competition, SAGE compresses over 330k alerts into 93 AGs. These AGs reflect the strategies used by the participating teams. The AGs are succinct, interpretable, and capture behavioral dynamics, e.g., that attackers will often follow shorter paths to re-exploit objectives.},
  abbr={VizSec},
  code={https://github.com/tudelft-cda-lab/SAGE},
  pdf={SAGE-for-VizSec.pdf},
  selected={true},
  kind={Conferences and Symposia},
  forthcoming={true}
}

@article{nadeem2021sage,
  title={SAGE: Intrusion Alert-driven Attack Graph Extractor},
  author={Nadeem, Azqa and Verwer, Sicco and Moskal, Stephen and Yang, Shanchieh J},
  journal={KDD workshop on AI-enabled Cybersecurity Analytics (AI4cyber)},
  year={2021},
  abstract={Attack graphs (AG) are used to assess pathways availed by cyber adversaries to penetrate a network. State-of-the-art approaches for AG generation focus mostly on deriving dependencies between system vulnerabilities based on network scans and expert knowledge. In real-world operations however, it is costly and ineffective to rely on constant vulnerability scanning and expert-crafted AGs. We propose to automatically learn AGs based on actions observed through intrusion alerts, without prior expert knowledge. Specifically, we develop an unsupervised sequence learning system, SAGE, that leverages the temporal and probabilistic dependence between alerts in a suffix-based probabilistic deterministic finite automaton (S-PDFA) -- a model that accentuates infrequent severe alerts and summarizes paths leading to them. AGs are then derived from the S-PDFA. Tested with intrusion alerts collected through Collegiate Penetration Testing Competition, SAGE produces AGs that reflect the strategies used by participating teams. The resulting AGs are succinct, interpretable, and enable analysts to derive actionable insights, e.g., attackers tend to follow shorter paths after they have discovered a longer one.},
  pdf={https://ai4cyber-kdd.com/KDD-AISec_files/SAGE_manuscript__AI4Cyber.pdf},
  abbr={AI4Cyber},
  video={https://youtu.be/YWGMIlMR4n0},
  code={https://github.com/tudelft-cda-lab/SAGE},
  kind={Workshops},
}

@inproceedings{nadeem2021beyond,
  title={Beyond Labeling: Using Clustering to Build Network Behavioral Profiles of <br/>Malware Families},
  author={Nadeem, Azqa and Hammerschmidt, Christian and Ganan, Carlos H and Verwer, Sicco},
  booktitle={Malware Analysis Using Artificial Intelligence and Deep Learning},
  editor="Stamp, Mark and Alazab, Mamoun and Shalaginov, Andrii", 
	year={2021},
	publisher="Springer International Publishing",
	pages="381--409",
	abstract="Malware family labels are known to be inconsistent. They are also black-box since they do not represent the capabilities of malware. The current state of the art in malware capability assessment includes mostly manual approaches, which are infeasible due to the ever-increasing volume of discovered malware samples. We propose a novel unsupervised machine learning-based method called MalPaCA, which automates capability assessment by clustering the temporal behavior in malware's network traces. MalPaCA provides meaningful behavioral clusters using only 20 packet headers. Behavioral profiles are generated based on the cluster membership of malware's network traces. A Directed Acyclic Graph shows the relationship between malwares according to their overlapping behaviors. The behavioral profiles together with the DAG provide more insightful characterization of malware than current family designations. We also propose a visualization-based evaluation method for the obtained clusters to assist practitioners in understanding the clustering results. We apply MalPaCA on a financial malware dataset collected in the wild that comprises 1.1 k malware samples resulting in 3.6 M packets. Our experiments show that (i) MalPaCA successfully identifies capabilities, such as port scans and reuse of Command and Control servers; (ii) It uncovers multiple discrepancies between behavioral clusters and malware family labels; and (iii) It demonstrates the effectiveness of clustering traces using temporal features by producing an error rate of 8.3%, compared to 57.5% obtained from statistical features.",
	isbn="978-3-030-62582-5",
	doi="10.1007/978-3-030-62582-5_15",
  pdf={http://pure.tudelft.nl/ws/portalfiles/portal/85997809/Nadeem2021_Chapter_BeyondLabelingUsingClusteringT.pdf},
  selected={true},
  abbr={MAAIDL},
  code={https://github.com/tudelft-cda-lab/malpaca-pub},
  kind={Chapters},
}

@inproceedings{verwer2020robust,
author = {Verwer, Sicco and Nadeem, Azqa and Hammerschmidt, Christian and Bliek, Laurens and Al-Dujaili, Abdullah and O'Reilly, Una-May},
title = {The Robust Malware Detection Challenge and Greedy Random Accelerated <br/>Multi-Bit Search},
year = {2020},
isbn = {9781450380942},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3411508.3421374},
doi = {10.1145/3411508.3421374},
abstract = {Training classifiers that are robust against adversarially modified examples is becoming
increasingly important in practice. In the field of malware detection, adversaries
modify malicious binary files to seem benign while preserving their malicious behavior.
We report on the results of a recently held robust malware detection challenge. There
were two tracks in which teams could participate: the attack track asked for adversarially
modified malware samples and the defend track asked for trained neural network classifiers
that are robust to such modifications. The teams were unaware of the attacks/defenses
they had to detect/evade. Although only 9 teams participated, this unique setting
allowed us to make several interesting observations.We also present the challenge
winner: GRAMS, a family of novel techniques to train adversarially robust networks
that preserve the intended (malicious) functionality and yield high-quality adversarial
samples. These samples are used to iteratively train a robust classifier. We show
that our techniques, based on discrete optimization techniques, beat purely gradient-based
methods. GRAMS obtained first place in both the attack and defend tracks of the competition.},
booktitle = {Proceedings of the 13th Workshop on Artificial Intelligence and Security (AISec)},
pages = {61–70},
numpages = {10},
location = {Virtual Event, USA},
series = {AISec'20},
  pdf={http://pure.tudelft.nl/ws/files/83427524/GRAMS_draft_2_.pdf},
  selected={false},
  abbr={AISec},
  code={https://github.com/tudelft-cda-lab/GRAMS},
  kind={Workshops},
}

@inproceedings{roeling2020hybrid,
  title={Hybrid connection and host clustering for community detection in spatial-temporal network data},
  author={Roeling, Mark P and Nadeem, Azqa and Verwer, Sicco},
booktitle="Proceedings of the 2nd Workshop on Machine Learning for Cybersecurity (MLCS)",
editor="Koprinska, Irena and Kamp, Michael and Appice, Annalisa and Loglisci, Corrado and Antonie, Luiza and Zimmermann, Albrecht and Guidotti, Riccardo and {\"O}zg{\"o}bek, {\"O}zlem and Ribeiro, Rita P. and Gavald{\`a}, Ricard and Gama, Jo{\~a}o and Adilova, Linara and Krishnamurthy, Yamuna and Ferreira, Pedro M. and Malerba, Donato and Medeiros, Ib{\'e}ria and Ceci, Michelangelo and Manco, Giuseppe and Masciari, Elio and Ras, Zbigniew W. 
and Christen, Peter and Ntoutsi, Eirini and Schubert, Erich and Zimek, Arthur and Monreale, Anna and Biecek, Przemyslaw and Rinzivillo, Salvatore and Kille, Benjamin and Lommatzsch, Andreas and Gulla, Jon Atle",
year="2020",
publisher="Springer International Publishing",
pages="178--204",
abstract="Network data clustering and sequential data mining are large fields of research, but how to combine them to analyze spatial-temporal network data remains a technical challenge. This study investigates a novel combination of two sequential similarity methods (Dynamic Time Warping and N-grams with Cosine distances), with two state-of-the-art unsupervised network clustering algorithms (Hierarchical Density-based Clustering and Stochastic Block Models). A popular way to combine such methods is to first cluster the sequential network data, resulting in connection types. The hosts in the network can then be clustered conditioned on these types. In contrast, our approach clusters nodes and edges in one go, i.e., without giving the output of a first clustering step as input for a second step. We achieve this by implementing sequential distances as covariates for host clustering. While being fully unsupervised, our method outperforms many existing approaches. To the best of our knowledge, the only approaches with comparable performance require manual filtering of connections and feature engineering steps. In contrast, our method is applied to raw network traffic. We apply our pipeline to the problem of detecting infected hosts (network nodes) from logs of unlabelled network traffic (sequential data). On data from the Stratosphere IPS project (CTU-Malware-Capture-Botnet-91), which includes malicious (Conficker botnet) as well as benign hosts, we show that our method perfectly detects peripheral, benign, and malicious hosts in different clusters. We replicate our results in the well-known ISOT dataset (Storm, Waledac, Zeus botnets) with comparable performance: conjointly, 99.97% of nodes were categorized correctly.",
isbn="978-3-030-65965-3",
  pdf={http://pure.tudelft.nl/ws/files/83428936/RoelingMP_NadeemA_VerwerS_MLCS2020.pdf},
  selected={false},
  abbr={MLCS},
  video={https://youtu.be/k7Z8Ebpusds},
  kind={Workshops},
}

@inproceedings{postermalpaca,
author={Nadeem, Azqa and Ganan, Carlos H and Verwer, Sicco},
booktitle={Nordic Conference on Secure IT Systems},
title={Poster: Clustering Malware's Network Behavior using Simple Sequential <br/>Features},
year={2018},
month={November},
abbr={Nordsec},
abstract="Malware attacks are becoming more elusive and powerful. The sheer number of malware samples that are detected on a daily basis is exceeding our capacity to analyze them. In addition, developing malware variants is extremely cheap for attackers because of the availability of various obfuscation tools. These variants can be grouped in malware families based on the similarity of behavioral information retrieved from their system and network activities. Available research suggests that the network traffic generated by malware shows a different aspect of its behavior. This may also be considered as its core behavior since it captures the interaction with its developer. In order to capture such interactions, techniques using Deep Packet Inspection (DPI) are becoming increasingly more common due to their high detection rates. However, DPI has severe privacy implications as it involves inspecting payloads of the network traffic. DPI also does not work well in the presence of encrypted traffic. We propose an exploratory study, the aim of which is to characterize and cluster malware behavior using high-level, non-privacy-invasive, sequential features extracted from its network activity. The key intuition behind the proposed solution is that if the underlying infrastructure of distinct malware samples is similar, the order in which they carry out their objectives should also be similar. We expect to see this similarity in high-level features that do not invade privacy. To this end, we develop a systematic framework using existing techniques that clusters similar network activities of malware samples using sequences of high-level features (i.e. packet sizes, interval between packets, source and destination port numbers) instead of statistical features. The results of this research show that sequence clustering allows flexible and robust clusters, as opposed to using statistical features. A detailed cluster content analysis shows that the clusters capture attacking capabilities of malware, such as port scans. They also identify the reuse of the same C&C servers by multiple malware families. In addition, an analysis of distinct network activities exhibited by malware families helps identify unique behaviors associated to particular families. These can be used to extract behavioral signatures for Intrusion Detection Systems. Lastly, clusters also capture common behaviors exhibited by multiple malware families. These common behaviors may suggest author collaboration. The resulting insights obtained from the proposed framework can prove to be valuable threat intelligence information for malware and network analysts.",
kind={Posters},
}

@inproceedings{postersbm,
author={Nadeem, Azqa and Roeling, Mark P and Verwer, Sicco},
booktitle={Cybersec & AI connected conference},
title={Poster: Clustering Connections and Hosts using a Hybrid Sequential Approach},
year={2019},
month={October},
volume={},
abbr={Cybersec&AI},
abstract="The data-volumes generated by inter-connected devices present a challenge for network analysis. Since the number of connections can far exceed the number of hosts, analysis often requires data reduction. To this end, a plethora of network clustering algorithms have been proposed, but studies usually model either hosts or connections. We propose a combination of connection-clustering and host-classification by using two popular state-of-the-art unsupervised clustering algorithms, Hierarchical Density-based Clustering (HDBScan) and Stochastic BlockModels (SBM). We used data from the Stratosphere IPS project (CTU-Malware-Capture-Botnet-91) that includes malicious and benign hosts. Network traffic from different hosts was split into unidirectional connections (a ! b). Each connection was represented by 4 sequential features to ensure the capture of temporal information (packet size, inter-arrival time, source and destination ports). An optimized packets-threshold was used to ensure effective behavioral modeling, after which the filtered connections were clustered with HDBScan. The resulting class labels (for every connection) were fed into a SBM, using the posterior probability as a covariate to accommodate imperfect class assignment. The SBM was also fitted on the raw features to investigate the merit of using HDBScan output as SBM-input. Model  fitting commended a 5-class solution for connection-clustering and 4-class solution for host-clustering. Applying the SBM directly to features resulted in a 2-class solution, indicating that connection clustering increased SBM sensitivity. Misclassification of the nodes was also lower in the combined method. Further investigation of class assignment revealed clusters of behaviorally similar connections. Conjointly, 88.5% of nodes were labelled correctly, albeit that classification was less accurate for benign hosts.
Conclusively, this study provides a rationale for using clustered connections as input for host-classification in this context, by sequential modeling of two powerful clustering methods, without the need for labelled data.",
kind={Posters},
}

@inproceedings{postersage,
author={Nadeem, Azqa and Verwer, Sicco and Moskal, Stephen and Yang, Shanchieh J},
doi={10.1145/3460120.3485361},
abbr={CCS},
booktitle={Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security},
title={Poster: Enabling Visual Analytics via Alert-driven Attack Graphs},
year={2021},
month={November},
abstract="Attack graphs (AG) are a popular area of research that display allthe paths an attacker can exploit to penetrate a network. Existing techniques for AG generation rely heavily on expert input regarding vulnerabilities and network topology. In this work, we advocate to build AGs directly using actions observed through intrusion alerts, without prior expert knowledge. We develop an unsupervised sequence learning system, called SAGE, to construct alert-driven attack graphs. We show how these AGs (i) enable forensic analysis of prior attacks, and (ii) enable proactive defense by providing relevant threat intelligence regarding attacker strategies. We believe that alert-driven AGs can play a key role in AI-enabled cyber threat intelligence as they open up new avenues for attacker strategy analysis whilst reducing analyst workload.",
kind={Posters},
  forthcoming={true}
}